#stage can only be "develop" or "product".  stage只能取develop或product两个值之一，用来区分是开发期还是布署期，布署期不允许动态编译执行
stage=develop

#Deploy package name, will used to save Java classes compiled from front end HTML. 指向项目的deploy包名，这个包内将会在运行期存放生成的Java源码
deploy_package=com.gitee.drinkjava2.reactmrp.deploy

#token_security implementation. 指同用户自定义的签权类
token_security=com.gitee.drinkjava2.reactmrp.config.ProjectTokenSecurity

#Call MyServerless server' method name. 调用MyServerless的远程方法的Javascript方法名，要与前端js中的一致，这个方法名区分大小写，必须是项目中唯一的命名，不能与其它方法重名
call_server_method = myServerless

#if allow out put java source files in classes folder at runtime. 是否在classes下输出动态创建的Java源码以供调试
allow_java_file_export=true

#allow_debug_info can only be "true" or "false", if set to true will put debugInfo in JSON. 如果调用出错，是否在生成的json里添加一个debugInfo字段返回给前端。
allow_debug_info=true

#server response headers 设定服务端response返回的headers，如果设置不当，在前后端同域不同域时，会产生前后端跨域拒绝访问或能访问但cookie丢失的问题。
Access_Control_Allow_Origin=http://localhost:3000
Access_Control_Allow_Methods=*
Access_Control_Max_Age=1728000
Access_Control_Allow_Headers=Content-Type 
Access_Control_Allow_Credentials=true

#Support which web files 支持在哪些web文件中书写MyServerless的Java和SQL远程方法，并且可以用go-backend/go-frontend批处理来抽取和还原
web_files=html,htm,js,jsx,jsp,php,vue

#API export folder, if not empty, when use deploy tool, will export MyServerlessAPI.txt in this folder. 如不为空，用deploy布署时会输出API文档在指定目录 
api_export_file=c:/api/apidoc.html